on:
  workflow_dispatch:
    inputs:
      deploy-tag:
        type: string
        required: true
        description: The tag to be deployed
env:
  CRI: podman
  CONFIG: ./ssh-config-files
jobs:
  deploy-ssh:
    runs-on: ubuntu-latest
    environment: ssh
    concurrency: ssh
    steps:
      - name: Prepare secrets
        run: |
          mkdir -p ${CONFIG}
          echo "PASSWORD=${{ secrets.db_pass }}" > properties.data 
          echo "USER=${{ secrets.db_user }}" >> properties.data
          echo "DB_URL=${{ secrets.db_url }}" >> properties.data
          echo "DB=${{ secrets.db_name }}" >> properties.data
          
          echo "DEPOY_TAG=${{ github.event.inputs.deploy-tag }}" > compose.data
          echo "PORT=${{ secrets.app_port }}" >> compose.data
          
          echo "PASSWORD=${{ secrets.db_pass }}" > postgres.data 
          echo "USER=${{ secrets.db_user }}" >> postgres.data
          echo "DATABASE=${{ secrets.db_name }}" >> postgres.data

      - name: Generate templates
        run: |
          source properties.data && envsubst < deploy/ssh/application-ssh.tpl.properties > ${CONFIG}/application-ssh.properties 
          source compose.data && envsubst < deploy/ssh/docker-compose.tpl.yml > ${CONFIG}/docker-compose.yml 
          source postgres.data && envsubst < deploy/ssh/postgres.tpl.env > ${CONFIG}/postgres.env

      - name: Copy files
        run: |
          rsync -avz ${CONFIG} ${{ secrets.ssh_user }}@${{ secrets.ssh_server }}:${{ secrets.app_location }} --delete || exit 1

      - name: Restart docker compose
        run: |
          ssh -t ${{ secrets.ssh_user }}@${{ secrets.ssh_server }} "cd ${{ secrets.app_location }} && ${CRI} compose restart"
